<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.6" />
    <httpRuntime targetFramework="4.6"/>
  </system.web>
  <system.serviceModel>
    <!--Certificate-->
    <bindings>
      <wsHttpBinding>
        <binding name="SecuretyWsHttpBinding" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" sendTimeout="00:05:00">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647"/>
          <security mode="Message">
            <message clientCredentialType="Certificate"/>
          </security>
        </binding>
      </wsHttpBinding>
      
      <webHttpBinding>
        <binding name="SecuretyWebHttpBinding" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647"
                 maxBufferSize="2147483647" transferMode="Streamed">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647"
                        maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647"/>
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
          </security>
        </binding>
      </webHttpBinding>
      
    </bindings>
    <!--Service-->
    <services>
      <service name="ServiceCertificate.MyService" behaviorConfiguration="MyServiceBehavior">
        <!--<host>
          <baseAddresses>
            <add baseAddress="https://localhost/"/>
          </baseAddresses>
        </host>-->
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="SecuretyWsHttpBinding" contract="ServiceCertificate.IMyService"/>
        <endpoint address="ajax" behaviorConfiguration="AjaxEndpointBehavior" binding="webHttpBinding" bindingConfiguration="SecuretyWebHttpBinding" contract="ServiceCertificate.IMyService"/>
        <endpoint address="xml" behaviorConfiguration="XmlEndpointBehavior" binding="webHttpBinding" bindingConfiguration="SecuretyWebHttpBinding" contract="ServiceCertificate.IMyService"/>
      </service>
    </services>
    
    <behaviors>
      <endpointBehaviors>
        <behavior name="AjaxEndpointBehavior">
          <webHttp helpEnabled="true" defaultOutgoingResponseFormat="Json" automaticFormatSelectionEnabled="false"/>
        </behavior>
        <behavior name="XmlEndpointBehavior">
          <webHttp helpEnabled="true" defaultOutgoingResponseFormat="Xml" automaticFormatSelectionEnabled="false"/>
        </behavior>
      </endpointBehaviors>
      
      <serviceBehaviors>
        <behavior name="MyServiceBehavior">
          <!--Чтобы избежать раскрытия метаданных, до развертывания задайте следующим параметрам значение "false". -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- Чтобы при сбое получать подробные сведения об исключении для целей отладки, установите для нижеприведенного параметра значение true.  Перед развертыванием установите значение false, чтобы избежать раскрытия информации об исключении -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
          <serviceCredentials>
            <clientCertificate>
              <authentication certificateValidationMode="PeerTrust" />
            </clientCertificate>
            <serviceCertificate findValue="RootCaClientTest" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName"/>
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="*" />
        <add name="Access-Control-Allow-Headers" value="Content-Type, Accept"/>
      </customHeaders>
    </httpProtocol>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        Для просмотра корневого каталога веб-приложения во время отладки установите значение true.
        Перед развертыванием установите значение false, чтобы избежать раскрытия сведений в папке веб-приложения.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>
